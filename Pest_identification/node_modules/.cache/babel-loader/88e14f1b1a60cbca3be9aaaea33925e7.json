{"remainingRequest":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox4\\src\\main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\@jiaminghi\\data-view\\lib\\components\\borderBox4\\src\\main.vue","mtime":1622556304218},{"path":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622556308397},{"path":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\babel-loader\\lib\\index.js","mtime":1622556308347},{"path":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622556308397},{"path":"C:\\Users\\leo\\Desktop\\害虫识别\\Pest_identification\\Pest_identification\\node_modules\\vue-loader\\lib\\index.js","mtime":1622556323213}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF1dG9SZXNpemUgZnJvbSAnLi4vLi4vLi4vbWl4aW4vYXV0b1Jlc2l6ZSc7CmltcG9ydCB7IGRlZXBNZXJnZSB9IGZyb20gJ0BqaWFtaW5naGkvY2hhcnRzL2xpYi91dGlsL2luZGV4JzsKaW1wb3J0IHsgZGVlcENsb25lIH0gZnJvbSAnQGppYW1pbmdoaS9jLXJlbmRlci9saWIvcGx1Z2luL3V0aWwnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0R2Qm9yZGVyQm94NCcsCiAgbWl4aW5zOiBbYXV0b1Jlc2l6ZV0sCiAgcHJvcHM6IHsKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICByZXZlcnNlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcmVmOiAnYm9yZGVyLWJveC00JywKICAgICAgZGVmYXVsdENvbG9yOiBbJ3JlZCcsICdyZ2JhKDAsMCwyNTUsMC44KSddLAogICAgICBtZXJnZWRDb2xvcjogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKCkgewogICAgICB2YXIgbWVyZ2VDb2xvciA9IHRoaXMubWVyZ2VDb2xvcjsKICAgICAgbWVyZ2VDb2xvcigpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbWVyZ2VDb2xvcjogZnVuY3Rpb24gbWVyZ2VDb2xvcigpIHsKICAgICAgdmFyIGNvbG9yID0gdGhpcy5jb2xvciwKICAgICAgICAgIGRlZmF1bHRDb2xvciA9IHRoaXMuZGVmYXVsdENvbG9yOwogICAgICB0aGlzLm1lcmdlZENvbG9yID0gZGVlcE1lcmdlKGRlZXBDbG9uZShkZWZhdWx0Q29sb3IsIHRydWUpLCBjb2xvciB8fCBbXSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIG1lcmdlQ29sb3IgPSB0aGlzLm1lcmdlQ29sb3I7CiAgICBtZXJnZUNvbG9yKCk7CiAgfQp9Ow=="},{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,UAAA,MAAA,2BAAA;AAEA,SAAA,SAAA,QAAA,kCAAA;AAEA,SAAA,SAAA,QAAA,qCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,cADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,OAAA,EAAA;AAAA,eAAA,EAAA;AAAA;AAFA,KADA;AAKA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAbA,kBAaA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,cADA;AAGA,MAAA,YAAA,EAAA,CAAA,KAAA,EAAA,mBAAA,CAHA;AAKA,MAAA,WAAA,EAAA;AALA,KAAA;AAOA,GArBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,mBACA;AAAA,UACA,UADA,GACA,IADA,CACA,UADA;AAGA,MAAA,UAAA;AACA;AALA,GAtBA;AA6BA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA,UACA,KADA,GACA,IADA,CACA,KADA;AAAA,UACA,YADA,GACA,IADA,CACA,YADA;AAGA,WAAA,WAAA,GAAA,SAAA,CAAA,SAAA,CAAA,YAAA,EAAA,IAAA,CAAA,EAAA,KAAA,IAAA,EAAA,CAAA;AACA;AALA,GA7BA;AAoCA,EAAA,OApCA,qBAoCA;AAAA,QACA,UADA,GACA,IADA,CACA,UADA;AAGA,IAAA,UAAA;AACA;AAxCA,CAAA","sourcesContent":["<template>\n  <div class=\"dv-border-box-4\" :ref=\"ref\">\n    <svg :class=\"`dv-border-svg-container ${reverse && 'dv-reverse'}`\" :width=\"width\" :height=\"height\">\n      <polyline class=\"dv-bb4-line-1\"\n        :stroke=\"mergedColor[0]\"\n        :points=\"`145, ${height - 5} 40, ${height - 5} 10, ${height - 35}\n          10, 40 40, 5 150, 5 170, 20 ${width - 15}, 20`\"\n      />\n      <polyline\n        :stroke=\"mergedColor[1]\"\n        class=\"dv-bb4-line-2\" :points=\"`245, ${height - 1} 36, ${height - 1} 14, ${height - 23}\n          14, ${height - 100}`\"\n      />\n\n      <polyline class=\"dv-bb4-line-3\" :stroke=\"mergedColor[0]\" :points=\"`7, ${height - 40} 7, ${height - 75}`\" />\n      <polyline class=\"dv-bb4-line-4\" :stroke=\"mergedColor[0]\" :points=\"`28, 24 13, 41 13, 64`\" />\n      <polyline class=\"dv-bb4-line-5\" :stroke=\"mergedColor[0]\" :points=\"`5, 45 5, 140`\" />\n      <polyline class=\"dv-bb4-line-6\" :stroke=\"mergedColor[1]\" :points=\"`14, 75 14, 180`\" />\n      <polyline class=\"dv-bb4-line-7\" :stroke=\"mergedColor[1]\" :points=\"`55, 11 147, 11 167, 26 250, 26`\" />\n      <polyline class=\"dv-bb4-line-8\" :stroke=\"mergedColor[1]\" :points=\"`158, 5 173, 16`\" />\n      <polyline class=\"dv-bb4-line-9\" :stroke=\"mergedColor[0]\" :points=\"`200, 17 ${width - 10}, 17`\" />\n      <polyline class=\"dv-bb4-line-10\" :stroke=\"mergedColor[1]\" :points=\"`385, 17 ${width - 10}, 17`\" />\n    </svg>\n\n    <div class=\"border-box-content\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport autoResize from '../../../mixin/autoResize'\n\nimport { deepMerge } from '@jiaminghi/charts/lib/util/index'\n\nimport { deepClone } from '@jiaminghi/c-render/lib/plugin/util'\n\nexport default {\n  name: 'DvBorderBox4',\n  mixins: [autoResize],\n  props: {\n    color: {\n      type: Array,\n      default: () => ([])\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      ref: 'border-box-4',\n\n      defaultColor: ['red', 'rgba(0,0,255,0.8)'],\n\n      mergedColor: []\n    }\n  },\n  watch: {\n    color () {\n      const { mergeColor } = this\n\n      mergeColor()\n    }\n  },\n  methods: {\n    mergeColor () {\n      const { color, defaultColor } = this\n\n      this.mergedColor = deepMerge(deepClone(defaultColor, true), color || [])\n    }\n  },\n  mounted () {\n    const { mergeColor } = this\n\n    mergeColor()\n  }\n}\n</script>"],"sourceRoot":"node_modules/@jiaminghi/data-view/lib/components/borderBox4/src"}]}